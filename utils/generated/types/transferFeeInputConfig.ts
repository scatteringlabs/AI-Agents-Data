/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { PublicKey } from '@metaplex-foundation/umi';
import {
  Serializer,
  bool,
  publicKey as publicKeySerializer,
  struct,
  u16,
} from '@metaplex-foundation/umi/serializers';

export type TransferFeeInputConfig = {
  feeInBasisPoints: number;
  withdrawAuthority: PublicKey;
  targetWallet: PublicKey;
  allowClaimTransferFeeAuthAsCreator: boolean;
};

export type TransferFeeInputConfigArgs = TransferFeeInputConfig;

export function getTransferFeeInputConfigSerializer(): Serializer<
  TransferFeeInputConfigArgs,
  TransferFeeInputConfig
> {
  return struct<TransferFeeInputConfig>(
    [
      ['feeInBasisPoints', u16()],
      ['withdrawAuthority', publicKeySerializer()],
      ['targetWallet', publicKeySerializer()],
      ['allowClaimTransferFeeAuthAsCreator', bool()],
    ],
    { description: 'TransferFeeInputConfig' }
  ) as Serializer<TransferFeeInputConfigArgs, TransferFeeInputConfig>;
}
